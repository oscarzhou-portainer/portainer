on: push

jobs:
  client-dependencies:
    name: client dependency check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --fail-on=upgradable --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
  server-dependencies:
    name: server dependency check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@master
      - name: Download dependencies
        run: go get -v -d
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif --file=./api/go.mod
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
  build_app:
    name: build app and api
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Use golang 1.17.x
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: install packages
        run: yarn install
      - name: build
        run: yarn build
      - name: upload dist artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-artifact
          path: dist/
  image-vulnerability:
    name: image vulnerability check
    needs: [build_app]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: download dist artifact
        uses: actions/download-artifact@v3
        with:  
          name: dist-artifact
          path: dist/
      - name: Build an image from Dockerfile
        run: | 
          docker build -t oscarzhou/trivy-portainer:latest -f build/linux/Dockerfile .
      - name: list docker images
        run: | 
          docker images
      - name: Run Trivy vulnerability scanner
        uses: oscarzhou/trivy-action@master
        with:
          image-ref: 'oscarzhou/trivy-portainer:latest'
          scan-type: image
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM'
